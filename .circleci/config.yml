version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:12.16-stretch
  working_directory: ~/repo

jobs:
  build-test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-npm-{{ checksum "package-lock.json" }}
            - v2-npm-
      - run:
          name: Install dependencies
          command: npm ci --prefer-offline
      - save_cache:
          paths:
            - ~/.npm
          key: v2-npm-{{ checksum "package-lock.json" }}
      - run:
          name: Build application
          command: npm run build
      - run:
          name: Run static analysis and check code style
          command: npm run lint
      - run:
          name: Run tests with coverage check
          command: npm run test:coverage
      - run:
          name: Run documentation linter
          command: npm run lint:docs
      - run:
          name: Verify if documentation is up-to-date
          command: npm run test:docs
      - persist_to_workspace:
          root: ~/
          paths:
            - repo

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish
      - run:
          name: Setup git user
          command: |
            git config user.email "cosmo-admin@github.com"
            git config user.name "cosmo-admin-CircleCI"
      - run:
          name: Update main branch
          command: |
            git checkout ${MAIN_BRANCH}
            git merge --ff-only ${CIRCLE_BRANCH}
            git push -q https://${GITHUB_TOKEN}@github.com/cloudify-cosmo/cloudify-ui-common.git ${MAIN_BRANCH}
      - run:
          name: Remove publish branch
          command: |
            git push -q https://${GITHUB_TOKEN}@github.com/cloudify-cosmo/cloudify-ui-common.git --delete ${CIRCLE_BRANCH}

  audit:
    <<: *defaults
    steps:
      -   attach_workspace:
            at: ~/
      -   run:
            name: Run npm production dependencies security audit
            command: npm run audit

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-test
      - deploy:
          requires:
            - build-test
          filters:
            branches:
              only: /^publish-v.*/
      - audit:
          requires:
            - build-test
          filters:
            branches:
              only: master
